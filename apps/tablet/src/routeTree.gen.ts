/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as PolaroidRouteImport } from './routes/polaroid'
import { Route as IndexRouteImport } from './routes/index'
import { Route as PolaroidIndexRouteImport } from './routes/polaroid/index'
import { Route as ViewerIdRouteImport } from './routes/viewer/$id'

const PolaroidRoute = PolaroidRouteImport.update({
  id: '/polaroid',
  path: '/polaroid',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const PolaroidIndexRoute = PolaroidIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => PolaroidRoute,
} as any)
const ViewerIdRoute = ViewerIdRouteImport.update({
  id: '/viewer/$id',
  path: '/viewer/$id',
  getParentRoute: () => rootRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/polaroid': typeof PolaroidRouteWithChildren
  '/viewer/$id': typeof ViewerIdRoute
  '/polaroid/': typeof PolaroidIndexRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/viewer/$id': typeof ViewerIdRoute
  '/polaroid': typeof PolaroidIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/polaroid': typeof PolaroidRouteWithChildren
  '/viewer/$id': typeof ViewerIdRoute
  '/polaroid/': typeof PolaroidIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/' | '/polaroid' | '/viewer/$id' | '/polaroid/'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/viewer/$id' | '/polaroid'
  id: '__root__' | '/' | '/polaroid' | '/viewer/$id' | '/polaroid/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  PolaroidRoute: typeof PolaroidRouteWithChildren
  ViewerIdRoute: typeof ViewerIdRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/polaroid': {
      id: '/polaroid'
      path: '/polaroid'
      fullPath: '/polaroid'
      preLoaderRoute: typeof PolaroidRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/polaroid/': {
      id: '/polaroid/'
      path: '/'
      fullPath: '/polaroid/'
      preLoaderRoute: typeof PolaroidIndexRouteImport
      parentRoute: typeof PolaroidRoute
    }
    '/viewer/$id': {
      id: '/viewer/$id'
      path: '/viewer/$id'
      fullPath: '/viewer/$id'
      preLoaderRoute: typeof ViewerIdRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

interface PolaroidRouteChildren {
  PolaroidIndexRoute: typeof PolaroidIndexRoute
}

const PolaroidRouteChildren: PolaroidRouteChildren = {
  PolaroidIndexRoute: PolaroidIndexRoute,
}

const PolaroidRouteWithChildren = PolaroidRoute._addFileChildren(
  PolaroidRouteChildren,
)

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  PolaroidRoute: PolaroidRouteWithChildren,
  ViewerIdRoute: ViewerIdRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
